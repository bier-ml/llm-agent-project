services:
    telegram_bot:
        build:
            context: .
            dockerfile: docker/Dockerfile.telegram_bot
        env_file:
            - .env
        environment:
            - CLIENT_SERVICE_URL=http://client_api:8000
        depends_on:
            - client_api
        networks:
            - ivan_network
        ports:
            - "8002:8002"
        restart: unless-stopped

    client_api:
        build:
            context: .
            dockerfile: docker/Dockerfile.client_api
        env_file:
            - .env
        environment:
            - AGENT_SERVICE_URL=http://llm_agent:8001
            - DATABASE_URL=postgresql://ivan:ivan@postgres:5432/ivan_db
        ports:
            - "8000:8000"
        depends_on:
            - llm_agent
            - postgres
        networks:
            - ivan_network
        restart: unless-stopped

    llm_agent:
        build:
            context: .
            dockerfile: docker/Dockerfile.llm_agent
        env_file:
            - .env
        environment:
            - LMSTUDIO_API_URL=http://host.docker.internal:1234/v1
            - LLM_API_URL=http://host.docker.internal:5001/v1
        ports:
            - "8001:8001"
        extra_hosts:
            - "host.docker.internal:host-gateway"
        networks:
            - ivan_network
        restart: unless-stopped

    postgres:
        image: postgres:15
        environment:
            - POSTGRES_USER=ivan
            - POSTGRES_PASSWORD=ivan
            - POSTGRES_DB=ivan_db
            - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - ivan_network
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ivan -d ivan_db"]
            interval: 5s
            timeout: 5s
            retries: 5

networks:
    ivan_network:
        driver: bridge

volumes:
    postgres_data:
